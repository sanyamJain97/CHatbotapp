[{"C:\\Users\\avani\\Desktop\\React_js\\chatapp\\src\\index.js":"1","C:\\Users\\avani\\Desktop\\React_js\\chatapp\\src\\App.js":"2","C:\\Users\\avani\\Desktop\\React_js\\chatapp\\src\\reportWebVitals.js":"3","C:\\Users\\avani\\Desktop\\React_js\\chatapp\\src\\components\\chatcontent.js":"4","C:\\Users\\avani\\Desktop\\React_js\\chatapp\\src\\components\\chatbot.js":"5","C:\\Users\\avani\\Desktop\\React_js\\chatapp\\src\\components\\Post.js":"6","C:\\Users\\avani\\Desktop\\React_js\\chatapp\\src\\components\\googleapi.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":259,"mtime":1610704487662,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":1548,"mtime":1610702492290,"results":"12","hashOfConfig":"9"},{"size":2636,"mtime":1610730962132,"results":"13","hashOfConfig":"9"},{"size":846,"mtime":1610705473027,"results":"14","hashOfConfig":"9"},{"size":1680,"mtime":1610794413406,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"20yhir",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\avani\\Desktop\\React_js\\chatapp\\src\\index.js",[],["32","33"],"C:\\Users\\avani\\Desktop\\React_js\\chatapp\\src\\App.js",[],"C:\\Users\\avani\\Desktop\\React_js\\chatapp\\src\\reportWebVitals.js",[],"C:\\Users\\avani\\Desktop\\React_js\\chatapp\\src\\components\\chatcontent.js",[],"C:\\Users\\avani\\Desktop\\React_js\\chatapp\\src\\components\\chatbot.js",["34"],"import React, { Component } from 'react';\r\nimport ChatBot from 'react-simple-chatbot';\r\n//import Post from './Post';\r\nimport GoogleDictionaryApi from \"./googleapi\";\r\nimport { ThemeProvider } from 'styled-components';\r\nimport axios from 'axios';\r\nconst theme = {\r\n\tbackground: '#f5f8fb',\r\n\tfontFamily: 'Helvetica Neue',\r\n\theaderBgColor: '#EF6C00',\r\n\theaderFontColor: '#fff',\r\n\theaderFontSize: '15px',\r\n\tbotBubbleColor: '#EF6C00',\r\n\tbotFontColor: '#fff',\r\n\tuserBubbleColor: '#fff',\r\n\tuserFontColor: '#4a4a4a',\r\n};\r\n\r\n\r\n\r\nclass SimpleForm extends Component {\r\n    // constructor() {\r\n    //     super();\r\n    //     this.state = {\r\n    //         totalReactPackages: [],\r\n    //     };\r\n    //   }\r\n    // async componentDidMount() {\r\n    //     // GET request using axios with async/await\r\n    //     const response = await axios.get('https://api.dictionaryapi.dev/api/v2/entries/en/hello');\r\n    //     this.setState({ totalReactPackages: response.data.total })\r\n    //     console.log(this.totalReactPackages);\r\n    // }\r\n\trender() {\r\n\t\treturn (\r\n            <ThemeProvider theme={theme}>\r\n\t\t\t<ChatBot \r\n\t\t\t\tsteps={[\r\n                    {\r\n                        id: 'start',\r\n                        message: 'What is your name?',\r\n                        trigger: 'name',\r\n                      },\r\n                      {\r\n                        id: 'name',\r\n                        user: true,\r\n                        trigger: '1',\r\n                      },\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tid:'1', \r\n\t\t\t\t\t\tmessage:'Hi {previousValue}! Which word you want to know?', \r\n\t\t\t\t\t\ttrigger:'2',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tid:'2', \r\n                        user: true,\r\n                        trigger: '3',\r\n                        // validator: (value) => {\r\n                        //     if (isNaN(value)) {\r\n                        //       return 'Enter a valid message';\r\n                        //     } \r\n                        //     return true;\r\n                        // }\r\n                    },\r\n                    {\r\n\t\t\t\t\t\tid:'3', \r\n                        component: <GoogleDictionaryApi />,\r\n                        asMessage: true,\r\n                        trigger: '4',\r\n                    },\r\n                    {\r\n                        id:'4', \r\n\t\t\t\t\t\tmessage:'Next word you want to search?', \r\n                        trigger: '5',\r\n                    },\r\n                    {\r\n                        id:'5', \r\n                        user: true,\r\n                        trigger: '3',\r\n                    },\r\n                    \r\n\r\n\t\t\t\t]}\r\n\t\t\t/>\r\n\t\t   </ThemeProvider>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\texport default SimpleForm;","C:\\Users\\avani\\Desktop\\React_js\\chatapp\\src\\components\\Post.js",[],"C:\\Users\\avani\\Desktop\\React_js\\chatapp\\src\\components\\googleapi.js",["35","36"],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":6,"column":8,"nodeType":"43","messageId":"44","endLine":6,"endColumn":13},{"ruleId":"41","severity":1,"message":"45","line":48,"column":15,"nodeType":"43","messageId":"44","endLine":48,"endColumn":22},{"ruleId":"41","severity":1,"message":"46","line":48,"column":24,"nodeType":"43","messageId":"44","endLine":48,"endColumn":31},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'trigger' is assigned a value but never used.","'loading' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]